version: '3.8'

services:
  # Prometheus - Alternative port 9091
  prometheus:
    image: prom/prometheus:latest
    container_name: overmind-prometheus-test
    ports:
      - "127.0.0.1:9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-test-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - overmind-test-network

  # Grafana - Alternative port 3002
  grafana:
    image: grafana/grafana:latest
    container_name: overmind-grafana-test
    ports:
      - "127.0.0.1:3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=overmind123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
    volumes:
      - grafana-test-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - overmind-test-network

  # PostgreSQL - Alternative port 5433
  postgres:
    image: postgres:15-alpine
    container_name: overmind-postgres-test
    environment:
      - POSTGRES_DB=snipercor
      - POSTGRES_USER=sniper
      - POSTGRES_PASSWORD=sniper123
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sniper"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - overmind-test-network

  # DragonflyDB - Alternative port 6380
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: overmind-dragonfly-test
    command: dragonfly --logtostderr
    volumes:
      - dragonfly-test-data:/data
    ports:
      - "127.0.0.1:6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6379", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - overmind-test-network
    ulimits:
      memlock: -1

  # Chroma Vector DB - Alternative port 8001
  chroma:
    image: chromadb/chroma:latest
    container_name: overmind-chroma-test
    ports:
      - "127.0.0.1:8001:8000"
    volumes:
      - chroma-test-data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - overmind-test-network

networks:
  overmind-test-network:
    driver: bridge

volumes:
  prometheus-test-data:
  grafana-test-data:
  postgres-test-data:
  dragonfly-test-data:
  chroma-test-data:

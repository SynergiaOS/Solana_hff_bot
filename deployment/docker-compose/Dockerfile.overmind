# THE OVERMIND PROTOCOL - Production Dockerfile
# Multi-stage build for optimized AI-enhanced trading system

# ============================================================================
# Stage 1: Build Environment
# ============================================================================
FROM rust:1.82-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Create dummy main.rs to build dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Build dependencies (this layer will be cached)
RUN cargo build --profile contabo

# Remove dummy source
RUN rm -rf src

# Copy actual source code
COPY src ./src
COPY tests ./tests

# Build THE OVERMIND PROTOCOL
RUN cargo build --profile contabo

# ============================================================================
# Stage 2: Runtime Environment
# ============================================================================
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r overmind && useradd -r -g overmind overmind

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/target/contabo/snipercor /app/snipercor

# Copy configuration files
COPY --chown=overmind:overmind .env.overmind.example /app/.env.example

# Create necessary directories
RUN mkdir -p /app/logs /app/config /app/data && \
    chown -R overmind:overmind /app

# Set environment variables
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${SNIPER_SERVER_PORT:-8080}/health || exit 1

# Expose port
EXPOSE 8080

# Switch to non-root user
USER overmind

# Start THE OVERMIND PROTOCOL
CMD ["./snipercor"]
